# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish Nuget Package

on:
  push:
    tags: 
      - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: RoutyaBuild

    steps:
      - name: 🧱 Checkout source
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build
        run: dotnet build Routya.ConfigKit/Routya.ConfigKit.csproj --configuration Release
      
      - name: 🗂️ Create local NuGet feed directory
        run: mkdir ./nupkg-local

      - name: 📦 Pack Routya.ConfigKit
        run: dotnet pack Routya.ConfigKit/Routya.ConfigKit.csproj --configuration Release --output ./nupkg-local

      - name: 🛠 Add local feed as NuGet source
        run: dotnet nuget add source "${{ github.workspace }}/nupkg-local" --name LocalFeed

      - name: 📦 Restore and pack Routya.ConfigKit.Generator
        run: |
          dotnet restore Routya.ConfigKit.Generator/Routya.ConfigKit.Generator.csproj
          dotnet pack Routya.ConfigKit.Generator/Routya.ConfigKit.Generator.csproj --configuration Release --output ./nupkgs

      - name: 🚀 Push Routya.ConfigKit to NuGet
        run: dotnet nuget push "./nupkg-local/Routya.ConfigKit.*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: 🚀 Push Routya.ConfigKit.Generator to NuGet
        run: dotnet nuget push "./nupkgs/Routya.ConfigKit.Generator.*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
